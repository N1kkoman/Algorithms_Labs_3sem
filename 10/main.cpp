#include <iostream>
#include <vector>

using namespace std;

// Функция, которая сортирует последовательность чисел методом слияния
void merge_sort(vector<int>& arr, int left, int right) {
    if (left >= right) { // базовый случай: если левая граница больше или равна правой, то массив уже отсортирован
        return;
    }
    int mid = (left + right) / 2; 
    merge_sort(arr, left, mid); // рекурсивно сортируем левую и правую половину массива
    merge_sort(arr, mid + 1, right);

    vector<int> temp(right - left + 1); // создаем временный вектор для объединения отсортированных половин
    int i = left, j = mid + 1, k = 0; // индексы для прохода по левой и правой половинам и временному вектору
    while (i <= mid && j <= right) { // объединяем элементы из левой и правой половин
        if (arr[i] <= arr[j]) { // если элемент из левой половины меньше или равен элементу из правой половины
            temp[k++] = arr[i++]; // помещаем его во временный вектор и увеличиваем соответствующий индекс
        }
        else {
            temp[k++] = arr[j++]; // иначе помещаем элемент из правой половины и увеличиваем соответствующий индекс
        }
    }
    while (i <= mid) { // если остались непройденные элементы в левой половине
        temp[k++] = arr[i++]; // копируем их во временный вектор 
    }
    while (j <= right) { // если остались непройденные элементы в правой половине
        temp[k++] = arr[j++]; // копируем их во временный вектор 
    }
    for (int i = left; i <= right; i++) { // копируем отсортированные элементы из временного вектора обратно в исходный массив
        arr[i] = temp[i - left]; // вычитаем из индекса i левую границу массива, чтобы получить соответствующий индекс во временном векторе temp.
    }
}


int main() {
    // Считываем последовательность чисел из консоли
    vector<int> arr;
    int x;
    while (cin >> x) {
        arr.push_back(x);
        if (cin.get() == '\n') {
            break;
        }
    }

    // Сортируем последовательность чисел методом слияния
    merge_sort(arr, 0, arr.size() - 1);

    for (int x : arr) {
        cout << x << " ";
    }
    cout << endl;

    return 0;
}




