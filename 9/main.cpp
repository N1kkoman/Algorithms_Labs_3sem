#include <iostream>
#include <vector>

using namespace std;

// Родитель: (i - 1) / 2
// Левый потомок: 2 * i + 1
// Правый потомок: 2 * i + 2

// Функция, которая сортирует последовательность чисел методом пирамидальной сортировки
void heap_sort(vector<int>& arr) {
    int n = arr.size();

    // Построение кучи
    for (int i = 0; i < n; i++) {
        int j = i;
        while (j > 0 && arr[j] > arr[(j - 1) / 2]) { // Пока текущий элемент больше своего родителя
            swap(arr[j], arr[(j - 1) / 2]); // Меняем местами текущий элемент и его родителя
            j = (j - 1) / 2; // Переходим к родителю текущего элемента
        }
    }

    // Извлечение элементов из кучи в отсортированном порядке
    for (int i = n - 1; i > 0; i--) {
        swap(arr[0], arr[i]); // Помещаем наибольший элемент в конец массива
        int j = 0;
        while (2 * j + 1 < i) { // Пока у текущего элемента есть потомки
            int k = 2 * j + 1;
            if (k + 1 < i && arr[k + 1] > arr[k]) { // Если у текущего элемента есть правый потомок и он больше левого
                k++; // Переходим к правому потомку
            }
            if (arr[k] > arr[j]) { // Если больший потомок больше текущего элемента
                swap(arr[j], arr[k]); // Меняем местами текущий элемент и больший потомок
                break; // Наибольший элемент больше его потомков
            }
            else {
                break; // Иначе элемент больше всех его потомков
            }
        }
    }
}




int main() {
    // Считываем последовательность чисел из консоли
    vector<int> arr;
    int x;
    while (cin >> x) {
        arr.push_back(x);
        if (cin.get() == '\n') {
            break;
        }
    }

    // Сортируем последовательность чисел методом пирамидальной сортировки
    heap_sort(arr);

    for (int x : arr) {
        cout << x << " ";
    }
    cout << endl;

    return 0;
}



